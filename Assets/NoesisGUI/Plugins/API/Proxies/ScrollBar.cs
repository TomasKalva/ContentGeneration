//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class ScrollBar : RangeBase {
  internal new static ScrollBar CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new ScrollBar(cPtr, cMemoryOwn);
  }

  internal ScrollBar(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(ScrollBar obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  #region Events
  public event ScrollEventHandler Scroll {
    add {
      AddHandler(ScrollEvent, value);
    }
    remove {
      RemoveHandler(ScrollEvent, value);
    }
  }

  #endregion

  public ScrollBar() {
  }

  protected override IntPtr CreateCPtr(Type type, out bool registerExtend) {
    if (type == typeof(ScrollBar)) {
      registerExtend = false;
      return NoesisGUI_PINVOKE.new_ScrollBar();
    }
    else {
      return base.CreateExtendCPtr(type, out registerExtend);
    }
  }

  public static DependencyProperty OrientationProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_OrientationProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ViewportSizeProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ViewportSizeProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedEvent ScrollEvent {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollEvent_get();
      return (RoutedEvent)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand DeferScrollToHorizontalOffsetCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_DeferScrollToHorizontalOffsetCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand DeferScrollToVerticalOffsetCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_DeferScrollToVerticalOffsetCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand LineDownCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_LineDownCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand LineLeftCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_LineLeftCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand LineRightCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_LineRightCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand LineUpCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_LineUpCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand PageDownCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_PageDownCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand PageLeftCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_PageLeftCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand PageRightCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_PageRightCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand PageUpCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_PageUpCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollHereCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollHereCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToBottomCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToBottomCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToEndCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToEndCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToHomeCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToHomeCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToHorizontalOffsetCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToHorizontalOffsetCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToLeftEndCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToLeftEndCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToRightEndCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToRightEndCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToTopCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToTopCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToVerticalOffsetCommand {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToVerticalOffsetCommand_get();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public Orientation Orientation {
    set {
      NoesisGUI_PINVOKE.ScrollBar_Orientation_set(swigCPtr, (int)value);
    } 
    get {
      Orientation ret = (Orientation)NoesisGUI_PINVOKE.ScrollBar_Orientation_get(swigCPtr);
      return ret;
    } 
  }

  public float ViewportSize {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ViewportSize_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.ScrollBar_ViewportSize_get(swigCPtr);
      return ret;
    } 
  }

  public Track Track {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_Track_get(swigCPtr);
      return (Track)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  internal new static IntPtr Extend(string typeName) {
    return NoesisGUI_PINVOKE.Extend_ScrollBar(Marshal.StringToHGlobalAnsi(typeName));
  }
}

}

