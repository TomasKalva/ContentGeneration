//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class LineSegment : PathSegment {
  internal new static LineSegment CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new LineSegment(cPtr, cMemoryOwn);
  }

  internal LineSegment(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(LineSegment obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public LineSegment() {
  }

  protected override IntPtr CreateCPtr(Type type, out bool registerExtend) {
    registerExtend = false;
    return NoesisGUI_PINVOKE.new_LineSegment__SWIG_0();
  }

  public LineSegment(Point point, bool isStroked) : this(NoesisGUI_PINVOKE.new_LineSegment__SWIG_1(ref point, isStroked), true) {
  }

  public static DependencyProperty PointProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.LineSegment_PointProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public Point Point {
    set {
      NoesisGUI_PINVOKE.LineSegment_Point_set(swigCPtr, ref value);
    }

    get {
      IntPtr ret = NoesisGUI_PINVOKE.LineSegment_Point_get(swigCPtr);
      if (ret != IntPtr.Zero) {
        return Marshal.PtrToStructure<Point>(ret);
      }
      else {
        return new Point();
      }
    }

  }

}

}

