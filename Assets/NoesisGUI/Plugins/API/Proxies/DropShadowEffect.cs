//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class DropShadowEffect : Effect {
  internal new static DropShadowEffect CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new DropShadowEffect(cPtr, cMemoryOwn);
  }

  internal DropShadowEffect(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(DropShadowEffect obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public DropShadowEffect() {
  }

  protected override IntPtr CreateCPtr(Type type, out bool registerExtend) {
    registerExtend = false;
    return NoesisGUI_PINVOKE.new_DropShadowEffect();
  }

  public static DependencyProperty BlurRadiusProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.DropShadowEffect_BlurRadiusProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ColorProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.DropShadowEffect_ColorProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty DirectionProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.DropShadowEffect_DirectionProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty OpacityProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.DropShadowEffect_OpacityProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ShadowDepthProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.DropShadowEffect_ShadowDepthProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public float BlurRadius {
    set {
      NoesisGUI_PINVOKE.DropShadowEffect_BlurRadius_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.DropShadowEffect_BlurRadius_get(swigCPtr);
      return ret;
    } 
  }

  public Color Color {
    set {
      NoesisGUI_PINVOKE.DropShadowEffect_Color_set(swigCPtr, ref value);
    }

    get {
      IntPtr ret = NoesisGUI_PINVOKE.DropShadowEffect_Color_get(swigCPtr);
      if (ret != IntPtr.Zero) {
        return Marshal.PtrToStructure<Color>(ret);
      }
      else {
        return new Color();
      }
    }

  }

  public float Direction {
    set {
      NoesisGUI_PINVOKE.DropShadowEffect_Direction_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.DropShadowEffect_Direction_get(swigCPtr);
      return ret;
    } 
  }

  public float Opacity {
    set {
      NoesisGUI_PINVOKE.DropShadowEffect_Opacity_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.DropShadowEffect_Opacity_get(swigCPtr);
      return ret;
    } 
  }

  public float ShadowDepth {
    set {
      NoesisGUI_PINVOKE.DropShadowEffect_ShadowDepth_set(swigCPtr, value);
    } 
    get {
      float ret = NoesisGUI_PINVOKE.DropShadowEffect_ShadowDepth_get(swigCPtr);
      return ret;
    } 
  }

}

}

