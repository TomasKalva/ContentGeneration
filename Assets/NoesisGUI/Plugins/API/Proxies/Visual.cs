//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class Visual : DependencyObject {
  internal new static Visual CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new Visual(cPtr, cMemoryOwn);
  }

  internal Visual(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(Visual obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected Visual() {
  }

  public View View {
    get {
      IntPtr view = GetViewHelper();
      return (View)Noesis.Extend.GetProxy(view, false);
    }
  }

  public bool IsAncestorOf(Visual visual) {
    if (visual == null) throw new ArgumentNullException("visual");
    {
      bool ret = NoesisGUI_PINVOKE.Visual_IsAncestorOf(swigCPtr, Visual.getCPtr(visual));
      return ret;
    }
  }

  public bool IsDescendantOf(Visual visual) {
    if (visual == null) throw new ArgumentNullException("visual");
    {
      bool ret = NoesisGUI_PINVOKE.Visual_IsDescendantOf(swigCPtr, Visual.getCPtr(visual));
      return ret;
    }
  }

  public Visual FindCommonVisualAncestor(Visual visual) {
    if (visual == null) throw new ArgumentNullException("visual");
    {
      IntPtr cPtr = NoesisGUI_PINVOKE.Visual_FindCommonVisualAncestor(swigCPtr, Visual.getCPtr(visual));
      return (Visual)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public Point PointFromScreen(Point point) {
    IntPtr ret = NoesisGUI_PINVOKE.Visual_PointFromScreen(swigCPtr, ref point);
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<Point>(ret);
    }
    else {
      return new Point();
    }
  }

  public Point PointToScreen(Point point) {
    IntPtr ret = NoesisGUI_PINVOKE.Visual_PointToScreen(swigCPtr, ref point);
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<Point>(ret);
    }
    else {
      return new Point();
    }
  }

  public Matrix4 TransformToAncestor(Visual ancestor) {
    if (ancestor == null) throw new ArgumentNullException("ancestor");
    {
      IntPtr ret = NoesisGUI_PINVOKE.Visual_TransformToAncestor(swigCPtr, Visual.getCPtr(ancestor));
      if (ret != IntPtr.Zero) {
        return Marshal.PtrToStructure<Matrix4>(ret);
      }
      else {
        return new Matrix4();
      }
    }
  }

  public Matrix4 TransformToDescendant(Visual descendant) {
    if (descendant == null) throw new ArgumentNullException("descendant");
    {
      IntPtr ret = NoesisGUI_PINVOKE.Visual_TransformToDescendant(swigCPtr, Visual.getCPtr(descendant));
      if (ret != IntPtr.Zero) {
        return Marshal.PtrToStructure<Matrix4>(ret);
      }
      else {
        return new Matrix4();
      }
    }
  }

  public Matrix4 TransformToVisual(Visual visual) {
    if (visual == null) throw new ArgumentNullException("visual");
    {
      IntPtr ret = NoesisGUI_PINVOKE.Visual_TransformToVisual(swigCPtr, Visual.getCPtr(visual));
      if (ret != IntPtr.Zero) {
        return Marshal.PtrToStructure<Matrix4>(ret);
      }
      else {
        return new Matrix4();
      }
    }
  }

  private IntPtr GetViewHelper() {
    IntPtr ret = NoesisGUI_PINVOKE.Visual_GetViewHelper(swigCPtr);
    return ret;
  }

  public void AddLayer(Visual layer) {
    if (layer == null) throw new ArgumentNullException("layer");
    {
      NoesisGUI_PINVOKE.Visual_AddLayer(swigCPtr, Visual.getCPtr(layer));
    }
  }

  public void RemoveLayer(Visual layer) {
    if (layer == null) throw new ArgumentNullException("layer");
    {
      NoesisGUI_PINVOKE.Visual_RemoveLayer(swigCPtr, Visual.getCPtr(layer));
    }
  }

  internal new static IntPtr Extend(string typeName) {
    return NoesisGUI_PINVOKE.Extend_Visual(Marshal.StringToHGlobalAnsi(typeName));
  }
}

}

