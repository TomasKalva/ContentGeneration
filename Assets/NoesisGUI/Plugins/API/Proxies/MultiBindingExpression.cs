//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class MultiBindingExpression : BindingExpressionBase {
  internal new static MultiBindingExpression CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new MultiBindingExpression(cPtr, cMemoryOwn);
  }

  internal MultiBindingExpression(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(MultiBindingExpression obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected MultiBindingExpression() {
  }

  public override void UpdateTarget() {
    NoesisGUI_PINVOKE.MultiBindingExpression_UpdateTarget(swigCPtr);
  }

  public override void UpdateSource() {
    NoesisGUI_PINVOKE.MultiBindingExpression_UpdateSource(swigCPtr);
  }

  public MultiBinding ParentBinding {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.MultiBindingExpression_ParentBinding_get(swigCPtr);
      return (MultiBinding)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

}

}

