//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;
using System.IO;

namespace Noesis
{

public class FontProvider : BaseComponent {
  internal new static FontProvider CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new FontProvider(cPtr, cMemoryOwn);
  }

  internal FontProvider(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(FontProvider obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected FontProvider() {
  }

  /// <summary>
  /// Scans a folder looking for all font files available. For each file, RegisterFont() should be
  /// called to cache all font information in the base provider implementation.
  /// </summary>
  /// <param name="folder">Path to the folder being scanned.</param>
  public virtual void ScanFolder(string folder) {
  }

  /// <summary>
  /// Opens font file for reading returning a stream.
  /// </summary>
  /// <param name="folder">Path to the folder where font should be found.</param>
  /// <param name="id">Font ID, typically file name.</param>
  public virtual Stream OpenFont(string folder, string id) {
    return null;
  }

  /// <summary>
  /// Registers a font family associated to the specified folder
  /// </summary>
  protected void RegisterFont(string folder, string id) {
    RegisterFontHelper(folder, id);
  }

  /// <summary>
  /// Notifies of changes to the specified texture file
  /// </summary>
  public delegate void FontChangedHandler(string baseUri, string familyName, FontWeight weight,
    FontStretch stretch, FontStyle style);
  public event FontChangedHandler FontChanged;

  /// <summary>
  /// Raises XamlChanged event notifying Noesis that it should reload the specified xaml
  /// </summary>
  public void RaiseFontChanged(string baseUri, string familyName, FontWeight weight,
    FontStretch stretch, FontStyle style) {
    FontChanged?.Invoke(baseUri, familyName, weight, stretch, style);
    Noesis_RaiseFontChanged(swigCPtr, baseUri, familyName, (int)weight, (int)stretch, (int)style);
  }

  [DllImport(Library.Name)]
  private static extern void Noesis_RaiseFontChanged(HandleRef provider,
    [MarshalAs(UnmanagedType.LPWStr)]string baseUri,
    [MarshalAs(UnmanagedType.LPWStr)]string familyName,
    int weight, int stretch, int style);

  private void RegisterFontHelper(string folder, string id) {
    NoesisGUI_PINVOKE.FontProvider_RegisterFontHelper(swigCPtr, folder != null ? folder : string.Empty, id != null ? id : string.Empty);
  }

  internal new static IntPtr Extend(string typeName) {
    return NoesisGUI_PINVOKE.Extend_FontProvider(Marshal.StringToHGlobalAnsi(typeName));
  }
}

}

