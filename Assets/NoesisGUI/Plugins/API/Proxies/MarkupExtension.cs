//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public abstract class MarkupExtension : BaseComponent {
  internal MarkupExtension(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(MarkupExtension obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected MarkupExtension() {
  }

  /// <summary>
  /// When implemented in a derived class, returns an object that is provided as the value of the
  /// target property for this markup extension. The method receives a service provider helper that
  /// can provide services (IProvideValueTarget, IUriContext, IXamlTypeResolver,
  /// IXamlNamespaceResolver, IXamlNameResolver) for the markup extension.
  /// </summary>
  public abstract object ProvideValue(IServiceProvider serviceProvider);

  internal new static IntPtr Extend(string typeName) {
    return NoesisGUI_PINVOKE.Extend_MarkupExtension(Marshal.StringToHGlobalAnsi(typeName));
  }
}

}

