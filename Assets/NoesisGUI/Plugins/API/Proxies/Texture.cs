//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public partial class Texture : BaseComponent {
  internal new static Texture CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new Texture(cPtr, cMemoryOwn);
  }

  internal Texture(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(Texture obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public void SetPrivateData(object context) {
    NoesisGUI_PINVOKE.Texture_SetPrivateData(swigCPtr, Noesis.Extend.GetInstanceHandle(context));
  }

  public uint Width {
    get {
      uint ret = NoesisGUI_PINVOKE.Texture_Width_get(swigCPtr);
      return ret;
    } 
  }

  public uint Height {
    get {
      uint ret = NoesisGUI_PINVOKE.Texture_Height_get(swigCPtr);
      return ret;
    } 
  }

  public bool HasMipMaps {
    get {
      bool ret = NoesisGUI_PINVOKE.Texture_HasMipMaps_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsInverted {
    get {
      bool ret = NoesisGUI_PINVOKE.Texture_IsInverted_get(swigCPtr);
      return ret;
    } 
  }

}

}

