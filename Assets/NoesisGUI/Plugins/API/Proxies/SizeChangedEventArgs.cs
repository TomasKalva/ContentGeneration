//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class SizeChangedEventArgs : RoutedEventArgs {
  private HandleRef swigCPtr;

  internal SizeChangedEventArgs(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SizeChangedEventArgs obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SizeChangedEventArgs() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NoesisGUI_PINVOKE.delete_SizeChangedEventArgs(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  internal static new void InvokeHandler(Delegate handler, IntPtr sender, IntPtr args) {
    SizeChangedEventHandler handler_ = (SizeChangedEventHandler)handler;
    if (handler_ != null) {
      handler_(Extend.GetProxy(sender, false), new SizeChangedEventArgs(args, false));
    }
  }

  public Size NewSize {
    get {
      IntPtr ret = NoesisGUI_PINVOKE.SizeChangedEventArgs_NewSize_get(swigCPtr);
      if (ret != IntPtr.Zero) {
        return Marshal.PtrToStructure<Size>(ret);
      }
      else {
        return new Size();
      }
    }

  }

  public Size PreviousSize {
    get {
      IntPtr ret = NoesisGUI_PINVOKE.SizeChangedEventArgs_PreviousSize_get(swigCPtr);
      if (ret != IntPtr.Zero) {
        return Marshal.PtrToStructure<Size>(ret);
      }
      else {
        return new Size();
      }
    }

  }

  public bool WidthChanged {
    get {
      bool ret = NoesisGUI_PINVOKE.SizeChangedEventArgs_WidthChanged_get(swigCPtr);
      return ret;
    } 
  }

  public bool HeightChanged {
    get {
      bool ret = NoesisGUI_PINVOKE.SizeChangedEventArgs_HeightChanged_get(swigCPtr);
      return ret;
    } 
  }

  public SizeChangedEventArgs(object source, RoutedEvent arg1, SizeChangedInfo info) : this(NoesisGUI_PINVOKE.new_SizeChangedEventArgs(Noesis.Extend.GetInstanceHandle(source), RoutedEvent.getCPtr(arg1), SizeChangedInfo.getCPtr(info)), true) {
  }

}

}

