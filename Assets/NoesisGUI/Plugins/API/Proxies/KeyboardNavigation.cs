//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class KeyboardNavigation : BaseComponent {
  internal new static KeyboardNavigation CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new KeyboardNavigation(cPtr, cMemoryOwn);
  }

  internal KeyboardNavigation(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(KeyboardNavigation obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public KeyboardNavigation() {
  }

  protected override IntPtr CreateCPtr(Type type, out bool registerExtend) {
    registerExtend = false;
    return NoesisGUI_PINVOKE.new_KeyboardNavigation__SWIG_0();
  }

  public KeyboardNavigation(Keyboard keyboard, Visual root) : this(NoesisGUI_PINVOKE.new_KeyboardNavigation__SWIG_1(Keyboard.getCPtr(keyboard), Visual.getCPtr(root)), true) {
  }

  public static KeyboardNavigationMode GetTabNavigation(DependencyObject element) {
    if (element == null) throw new ArgumentNullException("element");
    {
      KeyboardNavigationMode ret = (KeyboardNavigationMode)NoesisGUI_PINVOKE.KeyboardNavigation_GetTabNavigation(DependencyObject.getCPtr(element));
      return ret;
    }
  }

  public static void SetTabNavigation(DependencyObject element, KeyboardNavigationMode mode) {
    if (element == null) throw new ArgumentNullException("element");
    {
      NoesisGUI_PINVOKE.KeyboardNavigation_SetTabNavigation(DependencyObject.getCPtr(element), (int)mode);
    }
  }

  public static KeyboardNavigationMode GetControlTabNavigation(DependencyObject element) {
    if (element == null) throw new ArgumentNullException("element");
    {
      KeyboardNavigationMode ret = (KeyboardNavigationMode)NoesisGUI_PINVOKE.KeyboardNavigation_GetControlTabNavigation(DependencyObject.getCPtr(element));
      return ret;
    }
  }

  public static void SetControlTabNavigation(DependencyObject element, KeyboardNavigationMode mode) {
    if (element == null) throw new ArgumentNullException("element");
    {
      NoesisGUI_PINVOKE.KeyboardNavigation_SetControlTabNavigation(DependencyObject.getCPtr(element), (int)mode);
    }
  }

  public static KeyboardNavigationMode GetDirectionalNavigation(DependencyObject element) {
    if (element == null) throw new ArgumentNullException("element");
    {
      KeyboardNavigationMode ret = (KeyboardNavigationMode)NoesisGUI_PINVOKE.KeyboardNavigation_GetDirectionalNavigation(DependencyObject.getCPtr(element));
      return ret;
    }
  }

  public static void SetDirectionalNavigation(DependencyObject element, KeyboardNavigationMode mode) {
    if (element == null) throw new ArgumentNullException("element");
    {
      NoesisGUI_PINVOKE.KeyboardNavigation_SetDirectionalNavigation(DependencyObject.getCPtr(element), (int)mode);
    }
  }

  public static bool GetAcceptsReturn(DependencyObject element) {
    if (element == null) throw new ArgumentNullException("element");
    {
      bool ret = NoesisGUI_PINVOKE.KeyboardNavigation_GetAcceptsReturn(DependencyObject.getCPtr(element));
      return ret;
    }
  }

  public static void SetAcceptsReturn(DependencyObject element, bool value) {
    if (element == null) throw new ArgumentNullException("element");
    {
      NoesisGUI_PINVOKE.KeyboardNavigation_SetAcceptsReturn(DependencyObject.getCPtr(element), value);
    }
  }

  public static bool GetIsTabStop(DependencyObject element) {
    if (element == null) throw new ArgumentNullException("element");
    {
      bool ret = NoesisGUI_PINVOKE.KeyboardNavigation_GetIsTabStop(DependencyObject.getCPtr(element));
      return ret;
    }
  }

  public static void SetIsTabStop(DependencyObject element, bool value) {
    if (element == null) throw new ArgumentNullException("element");
    {
      NoesisGUI_PINVOKE.KeyboardNavigation_SetIsTabStop(DependencyObject.getCPtr(element), value);
    }
  }

  public static int GetTabIndex(DependencyObject element) {
    if (element == null) throw new ArgumentNullException("element");
    {
      int ret = NoesisGUI_PINVOKE.KeyboardNavigation_GetTabIndex(DependencyObject.getCPtr(element));
      return ret;
    }
  }

  public static void SetTabIndex(DependencyObject element, int value) {
    if (element == null) throw new ArgumentNullException("element");
    {
      NoesisGUI_PINVOKE.KeyboardNavigation_SetTabIndex(DependencyObject.getCPtr(element), value);
    }
  }

  public bool MoveFocus(FrameworkElement source, TraversalRequest request) {
    bool ret = NoesisGUI_PINVOKE.KeyboardNavigation_MoveFocus(swigCPtr, FrameworkElement.getCPtr(source), TraversalRequest.getCPtr(request));
    return ret;
  }

  public FrameworkElement PredictFocus(FrameworkElement source, FocusNavigationDirection direction) {
    IntPtr cPtr = NoesisGUI_PINVOKE.KeyboardNavigation_PredictFocus(swigCPtr, FrameworkElement.getCPtr(source), (int)direction);
    return (FrameworkElement)Noesis.Extend.GetProxy(cPtr, false);
  }

  public static DependencyProperty AcceptsReturnProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.KeyboardNavigation_AcceptsReturnProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ControlTabNavigationProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.KeyboardNavigation_ControlTabNavigationProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty DirectionalNavigationProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.KeyboardNavigation_DirectionalNavigationProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty IsTabStopProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.KeyboardNavigation_IsTabStopProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty TabIndexProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.KeyboardNavigation_TabIndexProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty TabNavigationProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.KeyboardNavigation_TabNavigationProperty_get();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

}

}

